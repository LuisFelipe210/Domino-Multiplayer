version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: domino-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  redis:
    image: redis:6.2-alpine
    container_name: domino-redis
    restart: unless-stopped

  backend1:
    build:
      context: ./backend
    container_name: backend-server-1
    environment:
      - PORT=4001
      - SERVER_ID=server-1
      - DATABASE_URL=${DATABASE_URL} # Alterado para usar a vari치vel do .env
      - REDIS_URL=${REDIS_URL}       # Alterado para usar a vari치vel do .env
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  backend2:
    build:
      context: ./backend
    container_name: backend-server-2
    environment:
      - PORT=4002
      - SERVER_ID=server-2
      - DATABASE_URL=${DATABASE_URL} # Alterado para usar a vari치vel do .env
      - REDIS_URL=${REDIS_URL}       # Alterado para usar a vari치vel do .env
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
  
  nginx:
    image: nginx:stable-alpine
    container_name: domino-nginx
    ports:
      - "80:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend1
      - backend2
    restart: unless-stopped

volumes:
  postgres_data: